"""
def reposition2(color):
    aligned = False
    tolerance_l = 20
    tolerance_r = 20
    media_left = {"Red": red_left[1], "Blue": [65, 85, 68], "Yellow": yellow_left[1], "Green": green_left[1], "Black": black_left[1], "Brown": brown_left[1], "Blue_White": blue_i_white_left[1]}
    media_right = {"Red": red_right[1], "Blue": [46, 76, 98], "Yellow": yellow_right[1], "Green": green_right[1],"Black": black_right[1], "Brown": brown_right[1], "Blue_White": blue_i_white_right[1]}
    if seeRight() == color or seeLeft() == color:
        while not (seeRight() == color and seeLeft() == color):
            if seeRight() != color:
                motor_right.run(30)
            if seeLeft() != color:
                motor_left.run(30)
        choose = treshold(media_left[color],white_left[1]) #mudar nome de choose
        print(choose)
        while not aligned:
            rgb_l = sensor_color_left.rgb()
            rgb_r = sensor_color_right.rgb()
            # rgb_r = [(rgb_r[0]*proporcion[0]), (rgb_r[1] * proporcion[1]), (rgb_r[2]*proporcion[2])]
            # p_rgb_l = percentagem(rgb_l, max_left[color])
            # p_rgb_r = percentagem(rgb_r, max_left[color])
            # print(p_rgb_l - p_rgb_r)
            if choose == "R":
                tresh = media_left["Blue"][0]
                print("LEFT ", rgb_l[0], " RIGHT ", rgb_r[0], " TRESH L ", tresh, " TRESH R ", tresh)
                if (rgb_l[0] - tolerance_l) <= tresh <= (rgb_l[0] + tolerance_l) and (rgb_r[0] - tolerance_r) <= tresh <= (rgb_r[0] + tolerance_r):
                    return True
                elif (rgb_l[0]) <= (tresh - tolerance_l):
                    motor_right.hold()
                    # print("esquerdinha")
                    motor_left.run(-30)
                elif (rgb_l[0]) >= (tresh + tolerance_l):
                    motor_right.hold()
                    # print("esquerdinha")
                    motor_left.run(30)
                elif (rgb_r[0]) <= (tresh - tolerance_r):
                    motor_right.hold()
                    # print("direitiinha")
                    motor_right.run(30)
                elif (rgb_r[0]) >= (tresh + tolerance_r):
                    motor_right.hold()
                    # print("direitiinha")
                    motor_right.run(-30)
            if choose == "G":
                tresh = media_left["Blue"][1]
                print("LEFT ", rgb_l[1], " RIGHT ", rgb_r[1], " TRESH L ", tresh, " TRESH R ", tresh)
                if (rgb_l[1] - tolerance_l) <= tresh <= (rgb_l[1] + tolerance_l) and (rgb_r[1] - tolerance_r) <= tresh <= (rgb_r[1] + tolerance_r):
                    return True
                elif (rgb_l[1]) <= (tresh - tolerance_l):
                    motor_right.hold()
                    # print("esquerdinha")
                    motor_left.run(-30)
                elif (rgb_l[1]) >= (tresh + tolerance_l):
                    motor_right.hold()
                    # print("esquerdinha")
                    motor_left.run(30)
                elif (rgb_r[1]) <= (tresh - tolerance_r):
                    motor_right.hold()
                    # print("direitiinha")
                    motor_right.run(30)
                elif (rgb_r[1]) >= (tresh + tolerance_r):
                    motor_right.hold()
                    # print("direitiinha")
                    motor_right.run(-30)
            if choose == "B":
                tresh = media_left["Blue"][1]
                print("LEFT ", rgb_l[2], " RIGHT ", rgb_r[2], " TRESH L ", tresh, " TRESH R ", tresh)
                if (rgb_l[2] - tolerance_l) <= tresh <= (rgb_l[2] + tolerance_l) and (rgb_r[2] - tolerance_r) <= tresh <= (rgb_r[2] + tolerance_r):
                    return True
                elif (rgb_l[2]) <= (tresh - tolerance_l):
                    motor_right.hold()
                    # print("esquerdinha")
                    motor_left.run(-30)
                elif (rgb_l[2]) >= (tresh + tolerance_l):
                    motor_right.hold()
                    # print("esquerdinha")
                    motor_left.run(30)
                elif (rgb_r[2]) <= (tresh - tolerance_r):
                    motor_right.hold()
                    # print("direitiinha")
                    motor_right.run(30)
                elif (rgb_r[2]) >= (tresh + tolerance_r):
                    motor_right.hold()
                    # print("direitiinha")
                    motor_right.run(-30)
    else:
        print("A cor não´é compativel em nenhum dos lados : ", color)
        return False
"""



# def reposition(color):
#     print("Se alinhando")
#     print("Entrou")

#     if seeRight() != color and seeLeft() == color:
#         print("Diferenciou")
#         while seeRight() != color:
#             circle_right()
#         stop()
#     elif seeRight() == color and seeLeft() != color:
#         print("1")
#         while seeLeft() != color:
#             circle_left()
#         stop()
#     elif seeRight() == seeLeft():
#         print("2")
#         #pass
#     elif seeRight() != color and seeLeft() != color:
#         while seeRight() != color:
#             circle_right()
#         stop()
#     print("rodou tudo")

'''
def circle_right():
    motor_right.run(80)
    motor_left.run(-10)

def circle_left():
    motor_left.run(80)
    motor_right.run(-10) '''